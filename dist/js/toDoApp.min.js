const addInput=document.querySelector(".app__add-input"),addBtn=document.querySelector(".app__add-btn"),tasksInfo=document.querySelector(".app__tasks-area-info"),tasksItems=document.getElementsByClassName("app__tasks-item"),tasksList=document.querySelector(".app__tasks-list");let taskArr=[];class Task{constructor(t){this.id=Date.now(),this.text=t,this.isDone=!1}}const downloadTasksFromLocalStorage=()=>{var t=JSON.parse(localStorage.getItem("tasksLocalCopy"));null!==t&&(t.forEach(t=>createNewTaskItem(t)),taskArr=t)},updateLocalStorage=()=>{var t=JSON.stringify(taskArr);localStorage.setItem("tasksLocalCopy",t)},updateNoneTasksInfo=()=>{0===tasksItems.length?tasksInfo.style.display="block":tasksInfo.style.display="none"},createNewTaskItem=({text:t,id:e,isDone:s})=>{var a=document.createElement("li"),e=(a.classList.add("app__tasks-item"),a.setAttribute("id",e),document.createElement("p")),t=(e.classList.add("app__tasks-item-text"),e.textContent=t,!0===s&&e.classList.add("app__tasks-item-text--done"),document.createElement("div")),s=(t.classList.add("app__tasks-item-settings"),document.createElement("button")),d=(s.classList.add("done-btn"),s.innerHTML='<i class="fa-solid fa-check"></i>',document.createElement("button")),i=(d.classList.add("edit-btn"),d.innerHTML='<i class="fa-solid fa-pen-to-square"></i>',document.createElement("button")),n=(i.classList.add("save-btn"),i.innerHTML='<i class="fa-solid fa-floppy-disk"></i>',document.createElement("button"));n.classList.add("delete-btn"),n.innerHTML='<i class="fa-solid fa-trash"></i>',t.append(s,d,i,n),a.append(e,t),tasksList.append(a)},addNewTask=()=>{var t;""!==addInput.value&&(t=new Task(addInput.value),taskArr.push(t),createNewTaskItem(t),addInput.value=""),updateLocalStorage(),updateNoneTasksInfo()},checkTaskAsDone=(t,e)=>{e.classList.toggle("app__tasks-item-text--done");const s=parseInt(t.getAttribute("id"));taskArr.map(t=>{t.id===s&&(!0===t.isDone?t.isDone=!1:t.isDone=!0)}),updateLocalStorage()},deleteTask=t=>{const e=parseInt(t.getAttribute("id"));taskArr=taskArr.filter(t=>t.id!==e),t.outerHTML="",updateLocalStorage(),updateNoneTasksInfo()},startEditText=(t,e,s,a,d)=>{t.contentEditable="true",t.focus(),e.style.visibility="hidden",s.style.visibility="hidden",a.style.display="none",d.style.display="block"},saveEditedText=(t,e,s,a,d,i)=>{e.contentEditable="false",s.style.visibility="visible",a.style.visibility="visible",d.style.display="block",i.style.display="none";const n=parseInt(t.getAttribute("id")),o=e.textContent;taskArr.map(t=>{t.id===n&&(t.text=o)}),updateLocalStorage()},closestTaskSettings=t=>{var e=t.target.closest(".app__tasks-item"),s=e.firstElementChild,a=t.target.closest("div").childNodes[0],d=t.target.closest("div").childNodes[3],i=t.target.closest("div").childNodes[1],n=t.target.closest("div").childNodes[2];t.target.classList.contains("fa-trash")&&deleteTask(e),t.target.classList.contains("fa-check")&&checkTaskAsDone(e,s),t.target.classList.contains("fa-pen-to-square")&&startEditText(s,a,d,i,n),t.target.classList.contains("fa-floppy-disk")&&saveEditedText(e,s,a,d,i,n)},keyShortcuts=t=>{"Enter"===t.key&&addNewTask()};downloadTasksFromLocalStorage(),updateNoneTasksInfo(),addBtn.addEventListener("click",addNewTask),document.addEventListener("click",t=>closestTaskSettings(t)),document.addEventListener("keydown",t=>keyShortcuts(t));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
