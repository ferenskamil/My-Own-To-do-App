import"./_sidebar.min.js";import"./_nav.min.js";const navUserNameSpan=document.querySelector(".nav__greeting-person"),currentNameSpan=document.querySelector(".user-name"),navAvatar=document.querySelector(".nav__avatar"),navAvatarImg=navAvatar.firstElementChild,changeNameInput=document.querySelector(".settings__name-input"),changeNameValidateInfo=document.querySelector(".new-name-input-error"),avatarsForm=document.querySelector(".settings__avatar-list"),settingsSaveBtn=document.querySelector(".settings__btn");let userSettings={userName:"",avatarSrc:""};const downloadUserSettingsFromLocalStorage=()=>{var e=JSON.parse(localStorage.getItem("userSettingsLocalCopy"));null!==e&&(userSettings=e,navAvatarImg.setAttribute("src",userSettings.avatarSrc),navUserNameSpan.textContent=userSettings.userName,currentNameSpan.textContent=userSettings.userName)},updateLocalStorage=()=>{var e=JSON.stringify(userSettings);localStorage.setItem("userSettingsLocalCopy",e)},updateUserNameInNav=()=>{var e=changeNameInput.value;e.length<=3?changeNameValidateInfo.style.display="block":(changeNameValidateInfo.style.display="none",userSettings.userName=e,currentNameSpan.textContent=e,navUserNameSpan.textContent=e)},markAvatarAsChecked=()=>{[...avatarsForm].forEach(e=>{var t=e.parentNode;e.checked?t.classList.add("settings__avatar-item--checked"):t.classList.remove("settings__avatar-item--checked")})},updateUserAvatar=()=>{[...avatarsForm].forEach(e=>{var t=e.parentNode,e=e.previousElementSibling.lastElementChild;t.classList.contains("settings__avatar-item--checked")&&(t=e.getAttribute("src"),navAvatarImg.setAttribute("src",t),userSettings.avatarSrc=t)})};downloadUserSettingsFromLocalStorage(),markAvatarAsChecked(),avatarsForm.addEventListener("click",markAvatarAsChecked),settingsSaveBtn.addEventListener("click",updateUserNameInNav),settingsSaveBtn.addEventListener("click",updateUserAvatar),settingsSaveBtn.addEventListener("click",updateLocalStorage);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3MubWluLmpzIiwic291cmNlcyI6WyJzZXR0aW5ncy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vX3NpZGViYXIubWluLmpzJztcclxuaW1wb3J0ICcuL19uYXYubWluLmpzJztcclxuXHJcbmNvbnN0IG5hdlVzZXJOYW1lU3BhbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXZfX2dyZWV0aW5nLXBlcnNvbicpO1xyXG5jb25zdCBjdXJyZW50TmFtZVNwYW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudXNlci1uYW1lJyk7XHJcbmNvbnN0IG5hdkF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXZfX2F2YXRhcicpO1xyXG5jb25zdCBuYXZBdmF0YXJJbWcgPSBuYXZBdmF0YXIuZmlyc3RFbGVtZW50Q2hpbGQ7XHJcblxyXG5jb25zdCBjaGFuZ2VOYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2V0dGluZ3NfX25hbWUtaW5wdXQnKTtcclxuY29uc3QgY2hhbmdlTmFtZVZhbGlkYXRlSW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXctbmFtZS1pbnB1dC1lcnJvcicpO1xyXG5cclxuY29uc3QgYXZhdGFyc0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2V0dGluZ3NfX2F2YXRhci1saXN0Jyk7XHJcbmNvbnN0IHNldHRpbmdzU2F2ZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZXR0aW5nc19fYnRuJyk7XHJcblxyXG5sZXQgdXNlclNldHRpbmdzID0ge1xyXG5cdHVzZXJOYW1lOiAnJyxcclxuXHRhdmF0YXJTcmM6ICcnLFxyXG59O1xyXG5cclxuY29uc3QgZG93bmxvYWRVc2VyU2V0dGluZ3NGcm9tTG9jYWxTdG9yYWdlID0gKCkgPT4ge1xyXG5cdGxldCBwYXJzZWRBcnIgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyU2V0dGluZ3NMb2NhbENvcHknKSk7XHJcblxyXG5cdGlmIChwYXJzZWRBcnIgIT09IG51bGwpIHtcclxuXHRcdHVzZXJTZXR0aW5ncyA9IHBhcnNlZEFycjtcclxuXHRcdG5hdkF2YXRhckltZy5zZXRBdHRyaWJ1dGUoJ3NyYycsIHVzZXJTZXR0aW5ncy5hdmF0YXJTcmMpO1xyXG5cdFx0bmF2VXNlck5hbWVTcGFuLnRleHRDb250ZW50ID0gdXNlclNldHRpbmdzLnVzZXJOYW1lO1xyXG5cdFx0Y3VycmVudE5hbWVTcGFuLnRleHRDb250ZW50ID0gdXNlclNldHRpbmdzLnVzZXJOYW1lO1xyXG5cdH1cclxufTtcclxuXHJcbmNvbnN0IHVwZGF0ZUxvY2FsU3RvcmFnZSA9ICgpID0+IHtcclxuXHRsZXQgc2V0dGluZ3NTdHIgPSBKU09OLnN0cmluZ2lmeSh1c2VyU2V0dGluZ3MpO1xyXG5cdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyU2V0dGluZ3NMb2NhbENvcHknLCBzZXR0aW5nc1N0cik7XHJcbn07XHJcblxyXG5jb25zdCB1cGRhdGVVc2VyTmFtZUluTmF2ID0gKCkgPT4ge1xyXG5cdGNvbnN0IG5ld05hbWUgPSBjaGFuZ2VOYW1lSW5wdXQudmFsdWU7XHJcblxyXG5cdGlmIChuZXdOYW1lLmxlbmd0aCA8PSAzKSB7XHJcblx0XHRjaGFuZ2VOYW1lVmFsaWRhdGVJbmZvLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRjaGFuZ2VOYW1lVmFsaWRhdGVJbmZvLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHR1c2VyU2V0dGluZ3MudXNlck5hbWUgPSBuZXdOYW1lO1xyXG5cdFx0Y3VycmVudE5hbWVTcGFuLnRleHRDb250ZW50ID0gbmV3TmFtZTtcclxuXHRcdG5hdlVzZXJOYW1lU3Bhbi50ZXh0Q29udGVudCA9IG5ld05hbWU7XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3QgbWFya0F2YXRhckFzQ2hlY2tlZCA9ICgpID0+IHtcclxuXHRbLi4uYXZhdGFyc0Zvcm1dLmZvckVhY2goKGlucHV0KSA9PiB7XHJcblx0XHRjb25zdCBhdmF0YXJJdGVtID0gaW5wdXQucGFyZW50Tm9kZTtcclxuXHJcblx0XHRpZiAoaW5wdXQuY2hlY2tlZCkge1xyXG5cdFx0XHRhdmF0YXJJdGVtLmNsYXNzTGlzdC5hZGQoJ3NldHRpbmdzX19hdmF0YXItaXRlbS0tY2hlY2tlZCcpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0YXZhdGFySXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdzZXR0aW5nc19fYXZhdGFyLWl0ZW0tLWNoZWNrZWQnKTtcclxuXHRcdH1cclxuXHR9KTtcclxufTtcclxuXHJcbmNvbnN0IHVwZGF0ZVVzZXJBdmF0YXIgPSAoKSA9PiB7XHJcblx0Wy4uLmF2YXRhcnNGb3JtXS5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG5cdFx0Y29uc3QgYXZhdGFySXRlbSA9IGlucHV0LnBhcmVudE5vZGU7XHJcblx0XHRjb25zdCBjaGVja2VkQXZhdGFySW1nID0gaW5wdXQucHJldmlvdXNFbGVtZW50U2libGluZy5sYXN0RWxlbWVudENoaWxkO1xyXG5cclxuXHRcdGlmIChhdmF0YXJJdGVtLmNsYXNzTGlzdC5jb250YWlucygnc2V0dGluZ3NfX2F2YXRhci1pdGVtLS1jaGVja2VkJykpIHtcclxuXHRcdFx0Y29uc3QgYXZhdGFyRmlsZVBhdGggPSBjaGVja2VkQXZhdGFySW1nLmdldEF0dHJpYnV0ZSgnc3JjJyk7XHJcblxyXG5cdFx0XHRuYXZBdmF0YXJJbWcuc2V0QXR0cmlidXRlKCdzcmMnLCBhdmF0YXJGaWxlUGF0aCk7XHJcblx0XHRcdHVzZXJTZXR0aW5ncy5hdmF0YXJTcmMgPSBhdmF0YXJGaWxlUGF0aDtcclxuXHRcdH1cclxuXHR9KTtcclxufTtcclxuXHJcbmRvd25sb2FkVXNlclNldHRpbmdzRnJvbUxvY2FsU3RvcmFnZSgpO1xyXG5tYXJrQXZhdGFyQXNDaGVja2VkKCk7XHJcbmF2YXRhcnNGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbWFya0F2YXRhckFzQ2hlY2tlZCk7XHJcbnNldHRpbmdzU2F2ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHVwZGF0ZVVzZXJOYW1lSW5OYXYpO1xyXG5zZXR0aW5nc1NhdmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB1cGRhdGVVc2VyQXZhdGFyKTtcclxuc2V0dGluZ3NTYXZlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdXBkYXRlTG9jYWxTdG9yYWdlKTtcclxuIl0sIm5hbWVzIjpbIm5hdlVzZXJOYW1lU3BhbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImN1cnJlbnROYW1lU3BhbiIsIm5hdkF2YXRhciIsIm5hdkF2YXRhckltZyIsImZpcnN0RWxlbWVudENoaWxkIiwiY2hhbmdlTmFtZUlucHV0IiwiY2hhbmdlTmFtZVZhbGlkYXRlSW5mbyIsImF2YXRhcnNGb3JtIiwic2V0dGluZ3NTYXZlQnRuIiwibGV0IiwidXNlclNldHRpbmdzIiwidXNlck5hbWUiLCJhdmF0YXJTcmMiLCJkb3dubG9hZFVzZXJTZXR0aW5nc0Zyb21Mb2NhbFN0b3JhZ2UiLCJwYXJzZWRBcnIiLCJKU09OIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic2V0QXR0cmlidXRlIiwidGV4dENvbnRlbnQiLCJ1cGRhdGVMb2NhbFN0b3JhZ2UiLCJzZXR0aW5nc1N0ciIsInN0cmluZ2lmeSIsInNldEl0ZW0iLCJ1cGRhdGVVc2VyTmFtZUluTmF2IiwibmV3TmFtZSIsInZhbHVlIiwibGVuZ3RoIiwic3R5bGUiLCJkaXNwbGF5IiwibWFya0F2YXRhckFzQ2hlY2tlZCIsImZvckVhY2giLCJhdmF0YXJJdGVtIiwiaW5wdXQiLCJwYXJlbnROb2RlIiwiY2hlY2tlZCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInVwZGF0ZVVzZXJBdmF0YXIiLCJjaGVja2VkQXZhdGFySW1nIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsImxhc3RFbGVtZW50Q2hpbGQiLCJjb250YWlucyIsImF2YXRhckZpbGVQYXRoIiwiZ2V0QXR0cmlidXRlIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ik1BQU8sMEJBQ0EsZ0JBRVAsTUFBTUEsZ0JBQWtCQyxTQUFTQyxjQUFjLHVCQUF1QixFQUNoRUMsZ0JBQWtCRixTQUFTQyxjQUFjLFlBQVksRUFDckRFLFVBQVlILFNBQVNDLGNBQWMsY0FBYyxFQUNqREcsYUFBZUQsVUFBVUUsa0JBRXpCQyxnQkFBa0JOLFNBQVNDLGNBQWMsdUJBQXVCLEVBQ2hFTSx1QkFBeUJQLFNBQVNDLGNBQWMsdUJBQXVCLEVBRXZFTyxZQUFjUixTQUFTQyxjQUFjLHdCQUF3QixFQUM3RFEsZ0JBQWtCVCxTQUFTQyxjQUFjLGdCQUFnQixFQUUvRFMsSUFBSUMsYUFBZSxDQUNsQkMsU0FBVSxHQUNWQyxVQUFXLEVBQ1osRUFFQSxNQUFNQyxxQ0FBdUMsS0FDNUNKLElBQUlLLEVBQVlDLEtBQUtDLE1BQU1DLGFBQWFDLFFBQVEsdUJBQXVCLENBQUMsRUFFdEQsT0FBZEosSUFDSEosYUFBZUksRUFDZlgsYUFBYWdCLGFBQWEsTUFBT1QsYUFBYUUsU0FBUyxFQUN2RGQsZ0JBQWdCc0IsWUFBY1YsYUFBYUMsU0FDM0NWLGdCQUFnQm1CLFlBQWNWLGFBQWFDLFNBRTdDLEVBRU1VLG1CQUFxQixLQUMxQlosSUFBSWEsRUFBY1AsS0FBS1EsVUFBVWIsWUFBWSxFQUM3Q08sYUFBYU8sUUFBUSx3QkFBeUJGLENBQVcsQ0FDMUQsRUFFTUcsb0JBQXNCLEtBQzNCLElBQU1DLEVBQVVyQixnQkFBZ0JzQixNQUU1QkQsRUFBUUUsUUFBVSxFQUNyQnRCLHVCQUF1QnVCLE1BQU1DLFFBQVUsU0FFdkN4Qix1QkFBdUJ1QixNQUFNQyxRQUFVLE9BQ3ZDcEIsYUFBYUMsU0FBV2UsRUFDeEJ6QixnQkFBZ0JtQixZQUFjTSxFQUM5QjVCLGdCQUFnQnNCLFlBQWNNLEVBRWhDLEVBRU1LLG9CQUFzQixLQUMzQixDQUFDLEdBQUd4QixhQUFheUIsUUFBUSxJQUN4QixJQUFNQyxFQUFhQyxFQUFNQyxXQUVyQkQsRUFBTUUsUUFDVEgsRUFBV0ksVUFBVUMsSUFBSSxnQ0FBZ0MsRUFFekRMLEVBQVdJLFVBQVVFLE9BQU8sZ0NBQWdDLENBRTlELENBQUMsQ0FDRixFQUVNQyxpQkFBbUIsS0FDeEIsQ0FBQyxHQUFHakMsYUFBYXlCLFFBQVEsSUFDeEIsSUFBTUMsRUFBYUMsRUFBTUMsV0FDbkJNLEVBQW1CUCxFQUFNUSx1QkFBdUJDLGlCQUVsRFYsRUFBV0ksVUFBVU8sU0FBUyxnQ0FBZ0MsSUFDM0RDLEVBQWlCSixFQUFpQkssYUFBYSxLQUFLLEVBRTFEM0MsYUFBYWdCLGFBQWEsTUFBTzBCLENBQWMsRUFDL0NuQyxhQUFhRSxVQUFZaUMsRUFFM0IsQ0FBQyxDQUNGLEVBRUFoQyxxQ0FBcUMsRUFDckNrQixvQkFBb0IsRUFDcEJ4QixZQUFZd0MsaUJBQWlCLFFBQVNoQixtQkFBbUIsRUFDekR2QixnQkFBZ0J1QyxpQkFBaUIsUUFBU3RCLG1CQUFtQixFQUM3RGpCLGdCQUFnQnVDLGlCQUFpQixRQUFTUCxnQkFBZ0IsRUFDMURoQyxnQkFBZ0J1QyxpQkFBaUIsUUFBUzFCLGtCQUFrQiJ9
