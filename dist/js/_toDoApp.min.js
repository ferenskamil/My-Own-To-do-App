"use strict";var _classesMin=_interopRequireDefault(require("./_classes.min.js"));function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}var addInput=document.querySelector(".app__add-input"),addBtn=document.querySelector(".app__add-btn"),tasksInfo=document.querySelector(".app__tasks-area-info"),tasksItems=document.getElementsByClassName("app__tasks-item"),tasksList=document.querySelector(".app__tasks-list"),taskArr=[],downloadTasksFromLocalStorage=function(){var t=JSON.parse(localStorage.getItem("tasksLocalCopy"));null!==t&&(t.forEach(function(t){return createNewTaskItem(t)}),taskArr=t)},updateLocalStorage=function(){var t=JSON.stringify(taskArr);localStorage.setItem("tasksLocalCopy",t)},updateNoneTasksInfo=function(){0===tasksItems.length?tasksInfo.style.display="block":tasksInfo.style.display="none"},createNewTaskItem=function(t){var e=t.text,s=t.id,t=t.isDone,a=document.createElement("li"),s=(a.classList.add("app__tasks-item"),a.setAttribute("id",s),document.createElement("p")),e=(s.classList.add("app__tasks-item-text"),s.textContent=e,!0===t&&s.classList.add("app__tasks-item-text--done"),document.createElement("div")),t=(e.classList.add("app__tasks-item-settings"),document.createElement("button")),n=(t.classList.add("done-btn"),t.innerHTML='<i class="fa-solid fa-check"></i>',document.createElement("button")),i=(n.classList.add("edit-btn"),n.innerHTML='<i class="fa-solid fa-pen-to-square"></i>',document.createElement("button")),o=(i.classList.add("save-btn"),i.innerHTML='<i class="fa-solid fa-floppy-disk"></i>',document.createElement("button"));o.classList.add("delete-btn"),o.innerHTML='<i class="fa-solid fa-trash"></i>',e.append(t,n,i,o),a.append(s,e),tasksList.append(a)},addNewTask=function(){var t;""!==addInput.value&&(t=new _classesMin.default(addInput.value),taskArr.push(t),createNewTaskItem(t),addInput.value=""),updateLocalStorage(),updateNoneTasksInfo()},checkTaskAsDone=function(t,e){e.classList.toggle("app__tasks-item-text--done");var s=parseInt(t.getAttribute("id"));taskArr.map(function(t){t.id===s&&(!0===t.isDone?t.isDone=!1:t.isDone=!0)}),updateLocalStorage()},deleteTask=function(t){var e=parseInt(t.getAttribute("id"));taskArr=taskArr.filter(function(t){return t.id!==e}),t.outerHTML="",updateLocalStorage(),updateNoneTasksInfo()},startEditText=function(t,e,s,a,n){t.contentEditable="true",t.focus(),e.style.visibility="hidden",s.style.visibility="hidden",a.style.display="none",n.style.display="block"},saveEditedText=function(t,e,s,a,n,i){e.contentEditable="false",s.style.visibility="visible",a.style.visibility="visible",n.style.display="block",i.style.display="none";var o=parseInt(t.getAttribute("id")),d=e.textContent;taskArr.map(function(t){t.id===o&&(t.text=d)}),updateLocalStorage()},closestTaskSettings=function(t){var e=t.target.closest(".app__tasks-item"),s=e.firstElementChild,a=t.target.closest("div").childNodes[0],n=t.target.closest("div").childNodes[3],i=t.target.closest("div").childNodes[1],o=t.target.closest("div").childNodes[2];t.target.classList.contains("fa-trash")&&deleteTask(e),t.target.classList.contains("fa-check")&&checkTaskAsDone(e,s),t.target.classList.contains("fa-pen-to-square")&&startEditText(s,a,n,i,o),t.target.classList.contains("fa-floppy-disk")&&saveEditedText(e,s,a,n,i,o)},keyShortcuts=function(t){"Enter"===t.key&&addNewTask()};downloadTasksFromLocalStorage(),updateNoneTasksInfo(),addBtn.addEventListener("click",addNewTask),document.addEventListener("click",function(t){return closestTaskSettings(t)}),document.addEventListener("keydown",function(t){return keyShortcuts(t)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
